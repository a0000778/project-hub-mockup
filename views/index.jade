extends _template

block head

block title

block body

  nav#sidebar
    .ui.menu.no.margin
      .ui.dropdown.item g0v pilot for Asperger's
        i.icon.dropdown
        .menu
          a.item g0v pilot for Asperger's
          a.item g0v pilot for Human
      .right.menu
        a.icon.item
          i.icon.help
    #search.field
      .ui.icon.input
        input(placeholder="search...", type="text")
        i.icon.search
    #index.ui.vertical.fluid.menu.no.margin
      #category.ui.accordion
        .title.header.item.active category
          i.icon.dropdown
        .content.ui.small.menu.active
          .menu
      #type.ui.accordion
        .title.header.item type
          i.icon.dropdown
        .content.ui.small.menu
          .menu
      #phase.ui.accordion
        .title.header.item phase
          i.icon.dropdown
        .content.ui.small.menu
          .menu
      #license.ui.accordion
        .title.header.item license
          i.icon.dropdown
        .content.ui.small.menu
          .menu
      #tool.ui.accordion
        .title.header.item tool
          i.icon.dropdown
        .content.ui.small.menu
          .menu
      #tag.ui.accordion
        .title.header.item tag
          i.icon.dropdown
        .content.ui.small.menu
          .menu

  section#projects
    #filter
    #list.ui.two.column.stackable.grid
      //-article.column.category-1
        a.ui.image(href="")
          img(src="")
        .text
          h3.ui.header 求職小幫手
          p.description blah blah
          p.achievement
            a.ui.label(href="") blah
        .hidden.text hidden

block script
  script.

    $(document).ready(function(){

      var attribute_template_source ='<a class="item" name="{{attribute_id}}">{{attribute_text}}<div class="ui label"></div></a>';
      var attribute_template = Handlebars.compile(attribute_template_source);

      var filter_template_source = '<div class="ui label" name="{{attribute_id}}">{{attribute_text}}<i class="icon delete"></i></div>';
      var filter_template = Handlebars.compile(filter_template_source);

      var list_template_source ='<article class="column {{classes}}"><a href="{{homepage}}" class="ui image"><img src="{{logo}}"></a><div class="text"><h3 class="ui header">{{name}}</h3><p class="description">{{intro}}</p><p class="achievement"></p></div><div class="hidden text">{{content}}</div></article>';
      var list_template = Handlebars.compile(list_template_source);

      var label_template_source = '<a href="{{url}}" target="_blank" class="ui label">{{type}} - {{phase}}</a>'
      var label_template = Handlebars.compile(label_template_source);

      var menus = {
        category : [],
        type : [],
        phase : [],
        license : [],
        tool : [],
        tag : [],
      };
      //var menus = {
      //  category : ["open government", "open data", "civil participation", "media 2.0", "g0v infrastructure", "policy wiki", "miscellaneous"],
      //  type : ["website", "android app", "ios app", "windows phone app", "linux software", "mac software", "windows software", "chrome extension", "firefox extension", "api", "document", "miscellaneous"],
      //  phase : ["idea", "plan", "wireframe", "mockup", "prototype", "alpha", "beta", "production", "maintenance", "memory", "miscellaneous"],
      //  license : ["CC0", "CC-By", "CC-By-NC", "CC-By-ND", "CC-By-SA", "CC-By-NC-SA", "CC-By-NC-ND", "Apache", "BSD", "GPL", "LGPL", "MIT", "miscellaneous"],
      //  tool : [],
      //  tag : [],
      //};

      var render_attributes = function(target_menu_name, attributes){
        $.each(attributes, function(attribute_index, attribute){
          var attribute_id = target_menu_name + "-" + attribute_index;
          var attribute_text = attribute;
          var context = {attribute_id: attribute_id, attribute_text: attribute_text};
          var $attribute_element = $(attribute_template(context));
          var $filter_element = $(filter_template(context));
          $("#" + target_menu_name + " .content .menu").append($attribute_element);
          $("#filter").append($filter_element);
        });
      }

      var count_attributes_by_id = function(){
        $.each(menus, function(menu_index, menu_items){
          $.each(menu_items, function(item_index, item){
            var attribute_id = $("#index .item").filter(":contains('" + item + "')").attr("name");
            var count = $("#list ." + attribute_id).length;
            $("#index .content .item").filter("[name='" + attribute_id + "']").find(".label").text(count);
          });
          $("#index .title").filter(":contains('" + menu_index + "')").append(" (" + menu_items.length + ")");
        });
      };

      var initialize_pilot = function(){
        var active_classes = [];
        var active_classes_string = "";
        var target_attribute = "";
        var toggle_classes = function(original_classes, target_class){
          if( _.contains( active_classes, target_attribute )){
            active_classes = _.without(active_classes, target_attribute);
          }else{
            active_classes.push(target_attribute);
          };
          active_classes_string = "";
          _.each(active_classes, function(css_class){
            active_classes_string = active_classes_string + "." + css_class;
          });
          $("#list .column").hide();
          $("#list .column" + active_classes_string ).show();
        };
        $("#index").on("click tap", ".content .item", function(){
          $(this).toggleClass("active");
          $("#filter").show();
          target_attribute = $(this).attr("name");
          $("#filter .ui.label").filter("[name='" + target_attribute + "']").fadeToggle();
          toggle_classes(active_classes, target_attribute);
        });
        $("#filter").on("click tap", ".ui.label .delete.icon", function(){
          $(this).parent().fadeOut();
          target_attribute = $(this).parent().attr("name");
          $("#index .content .item").filter("[name='" + target_attribute + "']").removeClass("active");
          toggle_classes(active_classes, target_attribute);
        });
      };

      // get data and then get everything work

      $.getJSON("json/project-list.json", function(projects){
        $.each(projects, function(project_index, project){
          var homepage = project.homepage;
          var logo = project.logo;
          var name = project.name.zh;
          var intro = project.intro.zh.short;
          var classes = [];
          var classes_string = ""
          var content = "";

          var add_classes = function(attribute_type){
            $.each(project[attribute_type], function(index, attribute){
              if( !_.contains(menus[attribute_type], attribute)){
                menus[attribute_type].push(attribute);
              }
              var attribute_id = attribute_type + "-" + menus[attribute_type].indexOf(attribute);
              classes.push(attribute_id);
            });
          };
          var add_sub_classes =  function(attribute_type, attribute){
            if( !_.contains(menus[attribute_type], attribute)){
              menus[attribute_type].push(attribute);
            }
            var attribute_id = attribute_type + "-" + menus[attribute_type].indexOf(attribute);
            if( !_.contains(classes, attribute_id) ){
              classes.push(attribute_id);
            };
          };

          add_classes("category");
          add_classes("tag");
          add_classes("tool");
          add_classes("license");

          var context = {classes: classes_string, homepage: homepage, logo: logo, name: name, intro: intro, content: content};
          var $list_element = $(list_template(context));

          $.each(project.achievement, function(achievement_index, achievement){
            var achievement_type = achievement.type;
            var achievement_phase = achievement.phase;
            var achievement_url = achievement.url;
            var context = {type: achievement_type, phase: achievement_phase, url: achievement_url};
            var $label_element = $(label_template(context));
            $list_element.find(".achievement").append($label_element);
            add_sub_classes("type", achievement_type);
            add_sub_classes("phase", achievement_phase);
          });

          $.each(classes, function(class_index, class_name){
            $list_element.addClass(class_name);
          });

          $("#list").append($list_element);
        });
      }).done(function(){
        // render sidebar menu
        $.each(menus, function(menu_id, menu_items){
          render_attributes(menu_id, menu_items);
        });
      }).done(function(){

        // for semantic ui
        $(".ui.dropdown").dropdown();
        $(".ui.accordion").accordion();

        // for ux
        $("#filter .ui.label").hide();

        // dom manipulation
        initialize_pilot();

      }).done(function(){
        count_attributes_by_id();
      }).done(function(){
        // TODO: sort menu items
      });

      // TBD

      var workspaces = ["hackpad", "hackfoldr", "google drive", "google groups", "google plus community", "facebook community", "irc channel", "github", "google calendar", "facebook group", "miscellaneous"];
      var roles = ["research", "planning", "ui", "visual", "art", "web frontend", "web backend", "ios", "android", "mac", "linux", "windows", "txt", "consult", "miscellaneous"];

    });
